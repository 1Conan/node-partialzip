import ava from 'ava';
import EOCD from '../src/lib/headers/EOCD';
// prettier-ignore
const data = Buffer.from([
  0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x4b, 0x05, 0x06, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00,
  0x04, 0x00, 0x94, 0x01, 0x00, 0x00, 0xa2, 0x09, 0x00, 0x00, 0x33, 0x00, 0x74, 0x68, 0x69, 0x73,
  0x20, 0x69, 0x73, 0x20, 0x61, 0x0d, 0x0a, 0x6d, 0x75, 0x6c, 0x74, 0x69, 0x6c, 0x69, 0x6e, 0x65,
  0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x74, 0x68, 0x65,
  0x20, 0x65, 0x6e, 0x74, 0x69, 0x72, 0x65, 0x20, 0x61, 0x72, 0x63, 0x68, 0x69, 0x76, 0x65,
]);

ava('End of central directory parsing', async (test) => {
  const eocd = new EOCD(data);

  test.is(eocd.diskNo, 0);
  test.is(eocd.cdStart, 0);
  test.is(eocd.cdEntries, 4);
  test.is(eocd.cdTotal, 4);
  test.is(eocd.cdSize, 404);
  test.is(eocd.cdOffset, 2466);
  test.is(eocd.commentLength, 51);
  test.is(eocd.comment, 'this is a\r\nmultiline comment for the entire archive');
});
