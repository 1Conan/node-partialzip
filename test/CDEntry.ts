import ava from 'ava';
import CentralDirectoryEntry from '../src/lib/headers/CDEntry';

// prettier-ignore
const data = Buffer.from([
  0x50, 0x4b, 0x01, 0x02, 0x17, 0x03, 0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x1c, 0x7d, 0x4b, 0x35,
  0xa6, 0xe1, 0x90, 0x7d, 0x45, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x0d, 0x00, 
  0x1c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0xa4, 0x81, 0x00, 0x00, 0x00, 0x00, 0x66, 0x69, 
  0x6c, 0x65, 0x31, 0x55, 0x54, 0x05, 0x00, 0x03, 0xc7, 0x48, 0x2d, 0x45, 0x55, 0x78, 0x00, 0x00,
  0x74, 0x68, 0x69, 0x73, 0x20, 0x69, 0x73, 0x20, 0x61, 0x20, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
  0x74, 0x20, 0x66, 0x6f, 0x72, 0x20, 0x66, 0x69, 0x6c, 0x65, 0x20, 0x31, 0x50, 0x4b,
]);

ava('Central Directory Entry', async (test) => {
  const entry = new CentralDirectoryEntry(data);

  test.is(entry.version, 0x0317);
  test.is(entry.versionToExtract, 20);
  test.is(entry.flags.raw, 0);
  test.is(entry.compression, 8);
  test.is(entry.lastModTime, 0x7d1c);
  test.is(entry.lastModDate, 0x354b);
  test.is(entry.crc32, 0x7d90e1a6);
  test.is(entry.compressedSize, 69); // nice
  test.is(entry.uncompressedSize, 74);
  test.is(entry.fileNameLength, 5);
  test.is(entry.commentLength, 28);
  test.is(entry.diskNo, 0);
  test.truthy(entry.internalAttributes.ascii);
  test.is(entry.externalAttributes, 0x81a40000);
  test.is(entry.offset, 0);
  test.is(entry.fileName, 'file1');
  // TODO: extra field tests
  test.is(entry.comment, 'this is a comment for file 1');

  test.deepEqual(entry.lastMod, new Date(2006, 10, 11, 15, 40, 56, 0));
  test.is(entry.hostOS, 3);
  test.is(entry.zipVersion, 23);
});
