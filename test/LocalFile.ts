import ava from 'ava';
import LocalFile from '../src/lib/headers/LocalFile';

// prettier-ignore
const data = Buffer.from([
  0x50, 0x4b, 0x03, 0x04, 0x14, 0x00, 0x00, 0x00, 0x08, 0x00, 0x1c, 0x7d, 0x4b, 0x35, 0xa6, 0xe1,
  0x90, 0x7d, 0x45, 0x00, 0x00, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x15, 0x00, 0x66, 0x69,
  0x6c, 0x65, 0x31, 0x55, 0x54, 0x09, 0x00, 0x03, 0xc7, 0x48, 0x2d, 0x45, 0xc7, 0x48, 0x2d, 0x45,
  0x55, 0x78, 0x04, 0x00, 0xf5, 0x01, 0xf5, 0x01, 0x0b, 0xc9, 0xc8, 0x2c, 0x56, 0x00, 0xa2, 0x92,
]);

ava('Local File Header', async (test) => {
  const entry = new LocalFile(data);

  test.is(entry.versionToExtract, 20);
  test.is(entry.flags.raw, 0);
  test.is(entry.compression, 8);
  test.deepEqual(entry.lastMod, new Date(2006, 10, 11, 15, 40, 56, 0));
  test.is(entry.crc32, 0x7d90e1a6);
  test.is(entry.compressedSize, 69); // nice
  test.is(entry.uncompressedSize, 74);
  test.is(entry.fileNameLength, 5);
  test.is(entry.extraFieldLength, 21);
  test.is(entry.fileName, 'file1');
  // TODO: extra field tests
});
